<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
	Autowired es una poderosa manera de inyectar objetos en 
	java.
	-->
	
	<bean id="direccion" class="entidad.Direccion">
		<property name="tipoVia" value="Avenida"></property>
		<property name="nombreVia" value="Luna"></property>
		<property name="ciudad" value="Tierra"></property>
	</bean>
	
	
	<bean id="direccion2" class="entidad.Direccion">
		<property name="tipoVia" value="Avenida"></property>
		<property name="nombreVia" value="Marte"></property>
		<property name="ciudad" value="Galaxia"></property>
	</bean>
	
	
	<!-- En vez de decir a spring que meta la direcion 1 mediante la etiqueta propertie
	o mediante el constructor, podemos decirle a Spring que busque un objeto de ese tipo
	de manera AUTOMATICA y que me lo inyecte, eso se hace poniendo autowired
	Dos tipos principales, "byType" spring busca un objeto de este TIPO y se lo inyecta
	Si hubiera 2 objetos candidatos a inyectar(mismo TIPO), daria error
	
	El otro tipo de autowired, es el llamado por "ByName", en caso de que eligamos esta opcion
	buscara un ID de Bean cuyo ID coincida con el nombre (name) de la propiedad
	En este ejemplo, cual es el nombre de la propiedad que quiero inyectar?
	la propiedad seria "direccion", pues bien, Spring busca un id de objeto que sea "direccion"
	-->
	<bean id="persona1" class="entidad.Persona" autowire="byName">
		<property name="nombre" value="Son Goku"></property>
	</bean>
	
</beans>
